(ql:quickload :fset)

(defun day10 (is-part-two)
  (let ((grid (fset:empty-map)) (trailheads))
    (loop :for line :in (uiop:read-file-lines #P"./10.txt") :for x :from 0
          :do (loop :for c :across line :for y :from 0 :for pos := (cons x y)
                    :do (fset:includef grid pos (digit-char-p c))
                    :when (char= c #\0) :do (push pos trailheads)))
    (labels ((get-next-positions (position)
               (let ((x (car position)) (y (cdr position)))
                 (loop :with next-height := (1+ (fset:lookup grid position))
                       :for (dx . dy) :in '((1 . 0) (-1 . 0) (0 . -1) (0 . 1))
                       :for next := (cons (+ x dx) (+ y dy))
                       :when (eql next-height (fset:lookup grid next))
                         :collect next)))
             (walk (trailhead)
               (let ((peaks (if is-part-two (fset:empty-bag) (fset:empty-set))))
                 (labels ((recur (position &optional (visits (fset:empty-set)))
                            (when (eql (fset:lookup grid position) 9)
                              (fset:includef peaks position))
                            (loop :with visits := (fset:with visits position)
                                  :for next :in (get-next-positions position)
                                  :unless (fset:member? next visits)
                                    :do (recur next visits))))
                   (recur trailhead)
                   (fset:size peaks)))))
      (loop :for trailhead :in trailheads :sum (walk trailhead)))))
